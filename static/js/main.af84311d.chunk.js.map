{"version":3,"sources":["Form.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Form","props","action","apiURL","method","onSubmit","e","preventDefault","req","XMLHttpRequest","open","url","onload","onSubmitted","onerror","onError","send","URLSearchParams","FormData","target","className","for","type","name","id","required","placeholder","rows","defaultCalendarSrc","App","useState","calendarSrc","setCalendarSrc","calendar","title","src","style","borderWidth","width","height","frameborder","scrolling","form","err","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af84311d.chunk.js","sourcesContent":["export default function Form(props) {\n  function onSubmit(e) {\n    e.preventDefault();\n    \n    const req = new XMLHttpRequest();\n    req.open(props.method, props.url);\n    req.onload = props.onSubmitted;\n    req.onerror = props.onError;\n    req.send(new URLSearchParams(new FormData(e.target)));\n  }\n  \n  return (\n    <form action={props.apiURL + '/events'} method=\"post\" onSubmit={onSubmit}>\n      <h2>Add new event</h2>\n      <div className=\"form-field\">\n        <label for=\"summary\">Title </label>\n        <input type=\"text\" name=\"summary\" id=\"summary\" required placeholder=\"Required\"/>\n      </div>\n      <div className=\"form-field\">\n        <label for=\"start\">Starts </label>\n        <input type=\"datetime-local\" name=\"start\" id=\"start\" required/>\n      </div>\n      <div className=\"form-field\">\n        <label for=\"end\">Ends </label>\n        <input type=\"datetime-local\" name=\"end\" id=\"end\" required/>\n      </div>\n      <div className=\"form-field\">\n        <label for=\"description\">Description </label>\n        <textarea name=\"description\" id=\"description\" rows=\"6\"/>\n      </div>\n      <div className=\"form-field\">\n        <label for=\"location\">Location </label>\n        <input type=\"text\" name=\"location\" id=\"location\"/>\n      </div>\n      <div className=\"form-field\">\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport Form from './Form.jsx'\nimport './App.css';\n\nconst defaultCalendarSrc = \"https://calendar.google.com/calendar/embed?height=600&wkst=1&bgcolor=%23ffffff&ctz=America%2FToronto&src=Zzh1ZGFmNWg1ZTBocmptc21mZm1nY3NxYzBAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&color=%23B39DDB&showTitle=0&showNav=1&showDate=1&showPrint=0&showCalendars=0&showTz=1&mode=AGENDA\";\n\nexport default function App(props) {\n  // Maintain as state to allow reloading frame contents.\n  const [calendarSrc, setCalendarSrc] = useState(defaultCalendarSrc);\n  \n  const calendar = <iframe title=\"Google Calendar\" src={calendarSrc} style={{ borderWidth: 0 }} width=\"600\" height=\"600\" frameborder=\"0\" scrolling=\"no\"/>;\n  \n  const form = (\n    <Form url={props.apiURL + '/events'} method=\"post\" onSubmitted={ () => {\n      setCalendarSrc('');\n      setCalendarSrc(defaultCalendarSrc);\n    } } onError={ (err) => { console.log('Form submission error: ' + err); } }>\n      <h2>Add new event</h2>\n      <div className=\"form-field\">\n        <label for=\"summary\">Title </label>\n        <input type=\"text\" name=\"summary\" id=\"summary\" required placeholder=\"Required\"/>\n      </div>\n      <div className=\"form-field\">\n        <label for=\"start\">Starts </label>\n        <input type=\"datetime-local\" name=\"start\" id=\"start\" required/>\n      </div>\n      <div className=\"form-field\">\n        <label for=\"end\">Ends </label>\n        <input type=\"datetime-local\" name=\"end\" id=\"end\" required/>\n      </div>\n      <div className=\"form-field\">\n        <label for=\"description\">Description </label>\n        <textarea name=\"description\" id=\"description\" rows=\"6\"/>\n      </div>\n      <div className=\"form-field\">\n        <label for=\"location\">Location </label>\n        <input type=\"text\" name=\"location\" id=\"location\"/>\n      </div>\n      <div className=\"form-field\">\n        <button type=\"submit\">Add</button>\n      </div>\n    </Form>\n  );\n  \n  return (\n    <div className=\"Outer\">\n      <h1>CalÎµnÎ´ar ðŸ—“</h1>\n      <div className=\"App\">\n        <div className=\"Calendar\">\n          {calendar}\n        </div>\n        {form}\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst apiURL = 'https://cal3ndar.herokuapp.com';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App apiURL={apiURL}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}