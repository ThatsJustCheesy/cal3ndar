{"version":3,"sources":["Form.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Form","props","action","apiURL","method","onSubmit","e","preventDefault","onSubmitInitiated","req","XMLHttpRequest","open","url","onload","onSubmitSuccess","onerror","onSubmitError","send","URLSearchParams","FormData","target","children","className","type","disabled","enabled","InputFormField","htmlFor","id","label","name","required","placeholder","TextAreaFormField","rows","defaultCalendarSrc","App","useState","calendarSrc","setCalendarSrc","formEnabled","setFormEnabled","lastSubmissionStatus","setLastSubmissionStatus","lastSubmissionStatusText","title","src","style","borderWidth","width","height","frameBorder","scrolling","onLoad","event","err","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d174adbe.chunk.js","sourcesContent":["export function Form(props) {\n  function onSubmit(e) {\n    e.preventDefault();\n    \n    if (props.onSubmitInitiated) props.onSubmitInitiated();\n    \n    const req = new XMLHttpRequest();\n    req.open(props.method, props.url);\n    req.onload = props.onSubmitSuccess;\n    req.onerror = props.onSubmitError;\n    req.send(new URLSearchParams(new FormData(e.target)));\n  }\n  \n  return (\n    <form action={props.apiURL + '/events'} method=\"post\" onSubmit={onSubmit}>\n      {props.children}\n      <div className=\"form-field\">\n        <button type=\"submit\" disabled={!props.enabled}>\n          {props.enabled ? 'Add' : 'Adding‚Ä¶'}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport function InputFormField(props) {\n  return (\n      <div className=\"form-field\">\n        <label htmlFor={props.id}>{props.label} </label>\n        <input type={props.type} name={props.name ?? props.id} id={props.id} required={props.required} placeholder={props.placeholder ?? (props.required ? 'Required' : '')}/>\n      </div>\n  );\n}\nexport function TextAreaFormField(props) {\n  return (\n      <div className=\"form-field\">\n        <label htmlFor={props.id}>{props.label} </label>\n        <textarea name={props.name ?? props.id} id={props.id} required={props.required} placeholder={props.placeholder ?? (props.required ? 'Required' : '')} rows={props.rows}/>\n      </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Form, InputFormField, TextAreaFormField } from './Form.jsx'\nimport './App.css';\n\nconst defaultCalendarSrc = \"https://calendar.google.com/calendar/embed?height=600&wkst=1&bgcolor=%23ffffff&ctz=America%2FToronto&src=Zzh1ZGFmNWg1ZTBocmptc21mZm1nY3NxYzBAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&color=%23B39DDB&showTitle=0&showNav=1&showDate=1&showPrint=0&showCalendars=0&showTz=1&mode=AGENDA\";\n\nexport default function App(props) {\n  // Maintain as state to allow reloading frame contents.\n  const [calendarSrc, setCalendarSrc] = useState(defaultCalendarSrc);\n  \n  const [formEnabled, setFormEnabled] = useState(true);\n  const [lastSubmissionStatus, setLastSubmissionStatus] = useState('none');\n  \n  const lastSubmissionStatusText = {\n    'success': '‚úÖ Event added successfully; the calendar view may take a moment to refresh',\n    'failure': '‚ùå The request failed'\n  }[lastSubmissionStatus] ?? '';\n  \n  return (\n    <div className=\"Outer\">\n      <h1>CalŒµnŒ¥ar üóì</h1>\n      <div className=\"App\">\n        \n        <div className=\"Calendar\">\n          <iframe\n            title=\"Google Calendar\"\n            src={calendarSrc}\n            style={{ borderWidth: 0 }}\n            width=\"600\"\n            height=\"600\"\n            frameBorder=\"0\"\n            scrolling=\"no\"\n            onLoad={event => {\n            }}\n          />\n        </div>\n        \n        <div>\n          <h2 className=\"flush-with-top\">Add new event</h2>\n          <p className=\"note\">Modern non-Firefox browser required for date pickers (sorry)</p>\n          \n          <Form\n            url={props.apiURL + '/events'}\n            method=\"post\"\n            \n            onSubmitInitiated={() => {\n              setLastSubmissionStatus('none');\n              setFormEnabled(false);\n            }}\n            \n            onSubmitSuccess={() => {\n              setLastSubmissionStatus('success');\n              setFormEnabled(true);\n              \n              // Reload the calendar view.\n              setCalendarSrc('');\n              setCalendarSrc(defaultCalendarSrc);\n            }}\n            onSubmitError={err => {\n              console.log('Form submission error: ' + err);\n              \n              setLastSubmissionStatus('failure');\n              setFormEnabled(true);\n            }}\n            \n            enabled={formEnabled}\n          >\n            <InputFormField id=\"summary\" type=\"text\" label=\"Title\" required/>\n            <InputFormField id=\"start\" type=\"datetime-local\" label=\"Starts\" required/>\n            <InputFormField id=\"end\" type=\"datetime-local\" label=\"Ends\" required/>\n            <TextAreaFormField id=\"description\" label=\"Description\" rows=\"6\"/>\n            <InputFormField id=\"location\" type=\"text\" label=\"Location\"/>\n          </Form>\n          \n          <p className={`note ${lastSubmissionStatus}-text`}>\n            {lastSubmissionStatusText}\n          </p>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst apiURL = 'https://cal3ndar.herokuapp.com';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App apiURL={apiURL}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}